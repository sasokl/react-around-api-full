{"ast":null,"code":"export const BASE_URL = 'http://localhost:3000';\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    if (!response.ok) {\n      return response.text().then(text => {\n        throw new Error(text);\n      });\n    }\n\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const authorize = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    if (!response.ok) return response.text().then(text => {\n      throw new Error(text);\n    });\n    return response.json();\n  }).then(res => {\n    if (res) {\n      localStorage.setItem('jwt', res.token);\n      return res;\n    }\n  }).catch(err => console.log(err));\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(response => {\n    if (!response.ok) return response.text().then(text => {\n      throw new Error(text);\n    });\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["A:/PracticumProj/react-around-api-full/frontend/src/utils/auth.js"],"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","response","ok","text","Error","json","catch","err","console","log","authorize","res","localStorage","setItem","token","checkToken"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,uBAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC3C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAf;AAL2B,GAAvB,CAAL,CAOJO,IAPI,CAOEC,QAAD,IAAc;AAClB,QAAG,CAACA,QAAQ,CAACC,EAAb,EAAiB;AACf,aAAOD,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqBG,IAAI,IAAI;AAClC,cAAM,IAAIC,KAAJ,CAAUD,IAAV,CAAN;AACD,OAFM,CAAP;AAGD;;AACD,WAAOF,QAAQ,CAACI,IAAT,EAAP;AACD,GAdI,EAeJC,KAfI,CAeGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAfX,CAAP;AAgBD,CAjBM;AAmBP,OAAO,MAAMG,SAAS,GAAG,CAAClB,QAAD,EAAWC,KAAX,KAAqB;AAC5C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAf;AAL2B,GAAvB,CAAL,CAOJO,IAPI,CAOEC,QAAD,IAAc;AAClB,QAAG,CAACA,QAAQ,CAACC,EAAb,EAAiB,OAAOD,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqBG,IAAI,IAAI;AAAE,YAAM,IAAIC,KAAJ,CAAUD,IAAV,CAAN;AAAuB,KAAtD,CAAP;AACjB,WAAOF,QAAQ,CAACI,IAAT,EAAP;AACD,GAVI,EAWJL,IAXI,CAWEW,GAAD,IAAS;AACb,QAAIA,GAAJ,EAAS;AACPC,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BF,GAAG,CAACG,KAAhC;AACA,aAAOH,GAAP;AACD;AACF,GAhBI,EAiBJL,KAjBI,CAiBGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAjBX,CAAP;AAkBD,CAnBM;AAqBP,OAAO,MAAMQ,UAAU,GAAID,KAAD,IAAW;AACnC,SAAOpB,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;AACnCK,IAAAA,MAAM,EAAE,KAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAkB,UAASkB,KAAM;AAF1B;AAF0B,GAAzB,CAAL,CAOJd,IAPI,CAOEC,QAAD,IAAc;AAClB,QAAG,CAACA,QAAQ,CAACC,EAAb,EAAiB,OAAOD,QAAQ,CAACE,IAAT,GAAgBH,IAAhB,CAAqBG,IAAI,IAAI;AAAE,YAAM,IAAIC,KAAJ,CAAUD,IAAV,CAAN;AAAuB,KAAtD,CAAP;AACjB,WAAOF,QAAQ,CAACI,IAAT,EAAP;AACD,GAVI,EAWJC,KAXI,CAWGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXX,CAAP;AAYD,CAbM","sourcesContent":["export const BASE_URL = 'http://localhost:3000';\r\n\r\nexport const register = (password, email) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({password, email})\r\n  })\r\n    .then((response) => {\r\n      if(!response.ok) {\r\n        return response.text().then(text => {\r\n          throw new Error(text)\r\n        })\r\n      }\r\n      return response.json()\r\n    })\r\n    .catch((err) => console.log(err))\r\n};\r\n\r\nexport const authorize = (password, email) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({password, email})\r\n  })\r\n    .then((response) => {\r\n      if(!response.ok) return response.text().then(text => { throw new Error(text) })\r\n      return response.json();\r\n    })\r\n    .then((res) => {\r\n      if (res) {\r\n        localStorage.setItem('jwt', res.token);\r\n        return res;\r\n      }\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const checkToken = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`,\r\n    }\r\n  })\r\n    .then((response) => {\r\n      if(!response.ok) return response.text().then(text => { throw new Error(text) })\r\n      return response.json()\r\n    })\r\n    .catch((err) => console.log(err));\r\n}"]},"metadata":{},"sourceType":"module"}