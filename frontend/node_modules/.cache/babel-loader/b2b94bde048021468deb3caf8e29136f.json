{"ast":null,"code":"var _jsxFileName = \"A:\\\\PracticumProj\\\\react-around-api-full\\\\frontend\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport { useEffect, useState } from \"react\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport DeleteCardPopup from \"./DeleteCardPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport * as auth from '../utils/auth';\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport Login from \"./Login\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Register from \"./Register\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isRegisterSuccess, setIsRegisterSuccess] = useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = useState(false);\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = useState(false);\n  const [isImagePreviewPopupOpen, setIsImagePreviewPopupOpen] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [userEmail, setUserEmail] = useState('');\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState({\n    name: '',\n    link: ''\n  });\n  const [cardToDelete, setCardToDelete] = useState('');\n\n  function logError(err) {\n    console.log(err);\n  }\n\n  useEffect(() => {\n    checkToken();\n  }, []);\n  useEffect(() => {\n    if (isLoggedIn) api.getUser().then(user => {\n      setCurrentUser(user);\n      api.getCards().then(cardsResultList => {\n        setCards(cardsResultList);\n      }).catch(logError);\n    }).catch(logError);\n  }, [isLoggedIn]);\n\n  const clearData = () => {\n    setCurrentUser({});\n    setUserEmail('');\n    setCards([]);\n    setIsLoggedIn(false);\n  };\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddCardClick = () => {\n    setIsAddCardPopupOpen(true);\n  };\n\n  const handleCardClick = card => {\n    setSelectedCard(card);\n    setIsImagePreviewPopupOpen(true);\n  };\n\n  function handleCardDeleteClick(cardID) {\n    setCardToDelete(cardID);\n    setIsDeleteCardPopupOpen(true);\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(item => item._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      setCards(state => state.map(item => item._id === card._id ? newCard : item));\n    }).catch(logError);\n  }\n\n  const handleUpdateUser = user => {\n    return api.setUser(user.name, user.about).then(res => {\n      setCurrentUser(res);\n    });\n  };\n\n  const handleUpdateAvatar = avatar => {\n    return api.setAvatarPicture(avatar).then(res => {\n      setCurrentUser(res);\n    });\n  };\n\n  const handleAddPlace = card => {\n    return api.addCard(card.name, card.link).then(newCard => {\n      setCards([newCard, ...cards]);\n    });\n  };\n\n  function handleCardDelete(cardID) {\n    return api.deleteCard(cardID).then(() => {\n      setCards(state => state.filter(item => item._id !== cardID));\n    });\n    /* I did a .catch block in the end of the chain (in the DeleteCardPopup component).\n    */\n  }\n\n  const handleRegister = (password, email) => {\n    return auth.register(password, email).then(res => {\n      if (res) setIsRegisterSuccess(true);else setIsRegisterSuccess(false);\n      setIsInfoTooltipOpen(true);\n      return res;\n    });\n  };\n\n  const handleLogin = (password, email) => {\n    return auth.authorize(password, email).then(res => {\n      if (res) {\n        setIsLoggedIn(true);\n        setUserEmail(email);\n      }\n\n      return res;\n    });\n  };\n\n  function checkToken() {\n    const jwt = localStorage.getItem('jwt');\n    console.log(`jwt: ${jwt}`);\n\n    if (jwt) {\n      auth.checkToken(jwt).then(res => {\n        if (res) {\n          setIsLoggedIn(true);\n          setUserEmail(res.data.email);\n          props.history.push('/');\n        }\n      });\n    }\n  }\n\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsDeleteCardPopupOpen(false);\n    setIsInfoTooltipOpen(false);\n    setSelectedCard({\n      name: '',\n      link: ''\n    });\n    setIsImagePreviewPopupOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          email: userEmail,\n          isLoggedIn: isLoggedIn,\n          onLogout: clearData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signin\",\n            children: /*#__PURE__*/_jsxDEV(Login, {\n              onSubmit: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            children: /*#__PURE__*/_jsxDEV(Register, {\n              onSubmit: handleRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            path: \"/\",\n            loggedIn: isLoggedIn,\n            children: /*#__PURE__*/_jsxDEV(Main, {\n              cards: cards,\n              onEditAvatarClick: handleEditAvatarClick,\n              onEditProfileClick: handleEditProfileClick,\n              onAddCardClick: handleAddCardClick,\n              onCardClick: handleCardClick,\n              onCardLike: handleCardLike,\n              onCardDelete: handleCardDeleteClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isInfoTooltipOpen,\n        onClose: closeAllPopups,\n        isSuccess: isRegisterSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onUpdateUser: handleUpdateUser,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onUpdateAvatar: handleUpdateAvatar,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddCardPopupOpen,\n        onAddPlace: handleAddPlace,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteCardPopup, {\n        isOpen: isDeleteCardPopupOpen,\n        cardToDelete: cardToDelete,\n        onDeleteCard: handleCardDelete,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        isOpen: isImagePreviewPopupOpen,\n        selectedCard: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GV8R3wFqwqBNg7zaqopKNUtmj/k=\");\n\n_c = App;\nexport default _c2 = withRouter(App);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["A:/PracticumProj/react-around-api-full/frontend/src/components/App.js"],"names":["Redirect","Route","Switch","withRouter","Header","Main","Footer","EditProfilePopup","useEffect","useState","EditAvatarPopup","AddPlacePopup","DeleteCardPopup","ImagePopup","auth","api","CurrentUserContext","Login","ProtectedRoute","Register","InfoTooltip","App","props","isLoggedIn","setIsLoggedIn","isRegisterSuccess","setIsRegisterSuccess","isInfoTooltipOpen","setIsInfoTooltipOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddCardPopupOpen","setIsAddCardPopupOpen","isDeleteCardPopupOpen","setIsDeleteCardPopupOpen","isImagePreviewPopupOpen","setIsImagePreviewPopupOpen","currentUser","setCurrentUser","userEmail","setUserEmail","cards","setCards","selectedCard","setSelectedCard","name","link","cardToDelete","setCardToDelete","logError","err","console","log","checkToken","getUser","then","user","getCards","cardsResultList","catch","clearData","handleEditAvatarClick","handleEditProfileClick","handleAddCardClick","handleCardClick","card","handleCardDeleteClick","cardID","handleCardLike","isLiked","likes","some","item","_id","changeLikeCardStatus","newCard","state","map","handleUpdateUser","setUser","about","res","handleUpdateAvatar","avatar","setAvatarPicture","handleAddPlace","addCard","handleCardDelete","deleteCard","filter","handleRegister","password","email","register","handleLogin","authorize","jwt","localStorage","getItem","data","history","push","closeAllPopups"],"mappings":"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","sourcesContent":["import {Redirect, Route, Switch, withRouter} from 'react-router-dom';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport {useEffect, useState} from \"react\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport DeleteCardPopup from \"./DeleteCardPopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport * as auth from '../utils/auth'\nimport api from \"../utils/api\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport Login from \"./Login\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport Register from \"./Register\";\nimport InfoTooltip from \"./InfoTooltip\";\n\n\nfunction App(props) {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isRegisterSuccess, setIsRegisterSuccess] = useState(false);\n\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = useState(false);\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = useState(false);\n  const [isImagePreviewPopupOpen, setIsImagePreviewPopupOpen] = useState(false);\n\n  const [currentUser, setCurrentUser] = useState({});\n  const [userEmail, setUserEmail] = useState('');\n  const [cards, setCards] = useState([]);\n\n  const [selectedCard, setSelectedCard] = useState({name: '', link: ''});\n  const [cardToDelete, setCardToDelete] = useState('');\n\n  function logError(err) {\n    console.log(err);\n  }\n\n  useEffect(() => {\n    checkToken();\n  }, []);\n\n  useEffect(() => {\n    if (isLoggedIn)\n      api.getUser()\n        .then(user => {\n          setCurrentUser(user);\n\n          api.getCards()\n            .then((cardsResultList) => {\n              setCards(cardsResultList);\n            })\n            .catch(logError);\n        })\n        .catch(logError);\n  }, [isLoggedIn])\n\n  const clearData = () => {\n    setCurrentUser({});\n    setUserEmail('');\n    setCards([]);\n    setIsLoggedIn(false);\n  }\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(true);\n  };\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(true);\n  };\n\n  const handleAddCardClick = () => {\n    setIsAddCardPopupOpen(true);\n  };\n\n  const handleCardClick = (card) => {\n    setSelectedCard(card)\n    setIsImagePreviewPopupOpen(true);\n  }\n\n  function handleCardDeleteClick(cardID) {\n    setCardToDelete(cardID);\n    setIsDeleteCardPopupOpen(true);\n  }\n\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(item => item._id === currentUser._id);\n\n    api.changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((item) => item._id === card._id ? newCard : item));\n      })\n      .catch(logError);\n  }\n\n  const handleUpdateUser = (user) => {\n    return api.setUser(user.name, user.about)\n      .then(res => {\n        setCurrentUser(res);\n      });\n  }\n\n  const handleUpdateAvatar = (avatar) => {\n    return api.setAvatarPicture(avatar)\n      .then(res => {\n        setCurrentUser(res);\n      });\n  }\n\n  const handleAddPlace = (card) => {\n    return api.addCard(card.name, card.link)\n      .then(newCard => {\n        setCards([newCard, ...cards]);\n      });\n  }\n\n  function handleCardDelete(cardID) {\n    return api.deleteCard(cardID)\n      .then(() => {\n        setCards((state) => state.filter((item) => item._id !== cardID));\n      });\n    /* I did a .catch block in the end of the chain (in the DeleteCardPopup component).\n    */\n  }\n\n  const handleRegister = (password, email) => {\n    return auth.register(password, email)\n      .then((res) => {\n        if (res) setIsRegisterSuccess(true);\n        else setIsRegisterSuccess(false);\n        setIsInfoTooltipOpen(true);\n        return res;\n      })\n  }\n\n  const handleLogin = (password, email) => {\n    return auth.authorize(password, email)\n      .then((res) => {\n        if (res) {\n          setIsLoggedIn(true)\n          setUserEmail(email);\n        }\n        return res;\n      })\n  }\n\n  function checkToken() {\n    const jwt = localStorage.getItem('jwt');\n    console.log(`jwt: ${jwt}`);\n    if (jwt) {\n      auth.checkToken(jwt).then((res) => {\n        if (res) {\n          setIsLoggedIn(true);\n          setUserEmail(res.data.email);\n          props.history.push('/');\n        }\n      });\n    }\n  }\n\n\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsDeleteCardPopupOpen(false);\n    setIsInfoTooltipOpen(false);\n\n    setSelectedCard({name: '', link: ''});\n    setIsImagePreviewPopupOpen(false);\n  }\n\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <div className=\"page\">\n          <Header\n            email={userEmail}\n            isLoggedIn={isLoggedIn}\n          onLogout={clearData}/>\n          <Switch>\n            <Route path=\"/signin\">\n              <Login\n                onSubmit={handleLogin}/>\n            </Route>\n            <Route path=\"/signup\">\n              <Register\n                onSubmit={handleRegister}/>\n            </Route>\n            <ProtectedRoute path=\"/\" loggedIn={isLoggedIn}>\n              <Main\n                cards={cards}\n                onEditAvatarClick={handleEditAvatarClick}\n                onEditProfileClick={handleEditProfileClick}\n                onAddCardClick={handleAddCardClick}\n                onCardClick={handleCardClick}\n                onCardLike={handleCardLike}\n                onCardDelete={handleCardDeleteClick}/>\n            </ProtectedRoute>\n          </Switch>\n          <Footer/>\n        </div>\n        <InfoTooltip\n          isOpen={isInfoTooltipOpen}\n          onClose={closeAllPopups}\n          isSuccess={isRegisterSuccess}/>\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onUpdateUser={handleUpdateUser}\n          onClose={closeAllPopups}/>\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onUpdateAvatar={handleUpdateAvatar}\n          onClose={closeAllPopups}/>\n        <AddPlacePopup\n          isOpen={isAddCardPopupOpen}\n          onAddPlace={handleAddPlace}\n          onClose={closeAllPopups}/>\n        <DeleteCardPopup\n          isOpen={isDeleteCardPopupOpen}\n          cardToDelete={cardToDelete}\n          onDeleteCard={handleCardDelete}\n          onClose={closeAllPopups}/>\n        <ImagePopup\n          isOpen={isImagePreviewPopupOpen}\n          selectedCard={selectedCard}\n          onClose={closeAllPopups}/>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}